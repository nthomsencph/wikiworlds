"""Add worldbuilding models with temporal support

Revision ID: b8add4679f9f
Revises: d53af32266b2
Create Date: 2025-10-14 21:30:15.762463

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'b8add4679f9f'
down_revision = 'd53af32266b2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('weave',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('subscription_tier', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('subscription_status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_weave_slug'), 'weave', ['slug'], unique=True)
    op.create_table('team',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('weave_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['weave_id'], ['weave.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_team_weave', 'team', ['weave_id'], unique=False)
    op.create_index(op.f('ix_team_weave_id'), 'team', ['weave_id'], unique=False)
    op.create_table('weave_user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('weave_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('invited_by', sa.Uuid(), nullable=True),
    sa.Column('invited_at', sa.DateTime(), nullable=True),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.Column('custom_permissions', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['invited_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['weave_id'], ['weave.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('weave_id', 'user_id')
    )
    op.create_index('idx_weave_user_user', 'weave_user', ['user_id'], unique=False)
    op.create_index('idx_weave_user_weave', 'weave_user', ['weave_id'], unique=False)
    op.create_index(op.f('ix_weave_user_user_id'), 'weave_user', ['user_id'], unique=False)
    op.create_index(op.f('ix_weave_user_weave_id'), 'weave_user', ['weave_id'], unique=False)
    op.create_table('world',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('weave_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cover_image', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('is_template', sa.Boolean(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Uuid(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['weave_id'], ['weave.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('weave_id', 'slug')
    )
    op.create_index('idx_world_public', 'world', ['is_public'], unique=False)
    op.create_index('idx_world_weave', 'world', ['weave_id'], unique=False)
    op.create_index(op.f('ix_world_weave_id'), 'world', ['weave_id'], unique=False)
    op.create_table('activity_log',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('world_id', sa.Uuid(), nullable=False),
    sa.Column('weave_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('action', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('resource_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('resource_id', sa.Uuid(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('parent_resource_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('parent_resource_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['weave_id'], ['weave.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_activity_created', 'activity_log', ['created_at'], unique=False)
    op.create_index('idx_activity_resource', 'activity_log', ['resource_type', 'resource_id'], unique=False)
    op.create_index('idx_activity_user', 'activity_log', ['user_id'], unique=False)
    op.create_index('idx_activity_weave', 'activity_log', ['weave_id'], unique=False)
    op.create_index('idx_activity_world', 'activity_log', ['world_id'], unique=False)
    op.create_index(op.f('ix_activity_log_user_id'), 'activity_log', ['user_id'], unique=False)
    op.create_index(op.f('ix_activity_log_weave_id'), 'activity_log', ['weave_id'], unique=False)
    op.create_index(op.f('ix_activity_log_world_id'), 'activity_log', ['world_id'], unique=False)
    op.create_table('entry_type',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('world_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('plural_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_system', sa.Boolean(), nullable=False),
    sa.Column('default_title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title_property', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('world_id', 'slug')
    )
    op.create_index('idx_entry_type_world', 'entry_type', ['world_id'], unique=False)
    op.create_index(op.f('ix_entry_type_world_id'), 'entry_type', ['world_id'], unique=False)
    op.create_table('permission',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('weave_id', sa.Uuid(), nullable=False),
    sa.Column('world_id', sa.Uuid(), nullable=True),
    sa.Column('resource_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('resource_id', sa.Uuid(), nullable=True),
    sa.Column('subject_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('subject_id', sa.Uuid(), nullable=True),
    sa.Column('action', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('effect', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('valid_from', sa.DateTime(), nullable=True),
    sa.Column('valid_until', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('granted_by', sa.Uuid(), nullable=False),
    sa.Column('granted_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['granted_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['weave_id'], ['weave.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_permission_action', 'permission', ['action'], unique=False)
    op.create_index('idx_permission_lookup', 'permission', ['weave_id', 'world_id', 'subject_type', 'subject_id', 'resource_type'], unique=False)
    op.create_index('idx_permission_resource', 'permission', ['resource_type', 'resource_id'], unique=False)
    op.create_index('idx_permission_subject', 'permission', ['subject_type', 'subject_id'], unique=False)
    op.create_index('idx_permission_weave', 'permission', ['weave_id'], unique=False)
    op.create_index('idx_permission_world', 'permission', ['world_id'], unique=False)
    op.create_index(op.f('ix_permission_weave_id'), 'permission', ['weave_id'], unique=False)
    op.create_index(op.f('ix_permission_world_id'), 'permission', ['world_id'], unique=False)
    op.create_table('reference_type',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('world_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('inverse_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('inverse_slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source_entry_types', sa.JSON(), nullable=True),
    sa.Column('target_entry_types', sa.JSON(), nullable=True),
    sa.Column('is_symmetric', sa.Boolean(), nullable=False),
    sa.Column('allow_multiple', sa.Boolean(), nullable=False),
    sa.Column('is_required', sa.Boolean(), nullable=False),
    sa.Column('is_system', sa.Boolean(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('world_id', 'slug')
    )
    op.create_index('idx_reference_type_world', 'reference_type', ['world_id'], unique=False)
    op.create_index(op.f('ix_reference_type_world_id'), 'reference_type', ['world_id'], unique=False)
    op.create_table('saved_view',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('world_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('view_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('filters', sa.JSON(), nullable=True),
    sa.Column('sort', sa.JSON(), nullable=True),
    sa.Column('visible_fields', sa.JSON(), nullable=True),
    sa.Column('timeline_settings', sa.JSON(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_saved_view_creator', 'saved_view', ['created_by'], unique=False)
    op.create_index('idx_saved_view_world', 'saved_view', ['world_id'], unique=False)
    op.create_index(op.f('ix_saved_view_world_id'), 'saved_view', ['world_id'], unique=False)
    op.create_table('tag',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('world_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tag_group', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('world_id', 'slug')
    )
    op.create_index('idx_tag_world', 'tag', ['world_id'], unique=False)
    op.create_index(op.f('ix_tag_world_id'), 'tag', ['world_id'], unique=False)
    op.create_table('team_member',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('team_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('added_by', sa.Uuid(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['added_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_team_member_team', 'team_member', ['team_id'], unique=False)
    op.create_index('idx_team_member_user', 'team_member', ['user_id'], unique=False)
    op.create_index(op.f('ix_team_member_team_id'), 'team_member', ['team_id'], unique=False)
    op.create_index(op.f('ix_team_member_user_id'), 'team_member', ['user_id'], unique=False)
    op.create_table('world_timeline',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('world_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('calendar_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('year_zero', sa.Integer(), nullable=False),
    sa.Column('year_zero_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('time_units', sa.JSON(), nullable=True),
    sa.Column('default_date_format', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('show_precise_dates', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_world_timeline_world_id'), 'world_timeline', ['world_id'], unique=False)
    op.create_table('world_user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('world_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('invited_by', sa.Uuid(), nullable=True),
    sa.Column('invited_at', sa.DateTime(), nullable=True),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.Column('custom_permissions', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['invited_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('world_id', 'user_id')
    )
    op.create_index('idx_world_user_user', 'world_user', ['user_id'], unique=False)
    op.create_index('idx_world_user_world', 'world_user', ['world_id'], unique=False)
    op.create_index(op.f('ix_world_user_user_id'), 'world_user', ['user_id'], unique=False)
    op.create_index(op.f('ix_world_user_world_id'), 'world_user', ['world_id'], unique=False)
    op.create_table('entry',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('world_id', sa.Uuid(), nullable=False),
    sa.Column('entry_type_id', sa.Uuid(), nullable=False),
    sa.Column('path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cover_image', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('timeline_start_year', sa.Integer(), nullable=True),
    sa.Column('timeline_start_month', sa.Integer(), nullable=True),
    sa.Column('timeline_start_day', sa.Integer(), nullable=True),
    sa.Column('timeline_end_year', sa.Integer(), nullable=True),
    sa.Column('timeline_end_month', sa.Integer(), nullable=True),
    sa.Column('timeline_end_day', sa.Integer(), nullable=True),
    sa.Column('timeline_is_circa', sa.Boolean(), nullable=False),
    sa.Column('timeline_is_ongoing', sa.Boolean(), nullable=False),
    sa.Column('timeline_display_override', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('position', sa.Float(), nullable=False),
    sa.Column('search_vector', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('embedding', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Uuid(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['entry_type_id'], ['entry_type.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('world_id', 'slug')
    )
    op.create_index('idx_entry_path', 'entry', ['path'], unique=False)
    op.create_index('idx_entry_timeline_end', 'entry', ['timeline_end_year'], unique=False)
    op.create_index('idx_entry_timeline_start', 'entry', ['timeline_start_year'], unique=False)
    op.create_index('idx_entry_type', 'entry', ['entry_type_id'], unique=False)
    op.create_index('idx_entry_world', 'entry', ['world_id'], unique=False)
    op.create_index(op.f('ix_entry_entry_type_id'), 'entry', ['entry_type_id'], unique=False)
    op.create_index(op.f('ix_entry_path'), 'entry', ['path'], unique=False)
    op.create_index(op.f('ix_entry_world_id'), 'entry', ['world_id'], unique=False)
    op.create_table('era',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('world_timeline_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('start_year', sa.Integer(), nullable=True),
    sa.Column('end_year', sa.Integer(), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['world_timeline_id'], ['world_timeline.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_era_world_timeline_id'), 'era', ['world_timeline_id'], unique=False)
    op.create_table('field_definition',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('entry_type_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('field_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('is_required', sa.Boolean(), nullable=False),
    sa.Column('default_value', sa.JSON(), nullable=True),
    sa.Column('show_in_table', sa.Boolean(), nullable=False),
    sa.Column('show_in_preview', sa.Boolean(), nullable=False),
    sa.Column('is_temporal', sa.Boolean(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['entry_type_id'], ['entry_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('entry_type_id', 'slug')
    )
    op.create_index('idx_field_def_type', 'field_definition', ['entry_type_id'], unique=False)
    op.create_index(op.f('ix_field_definition_entry_type_id'), 'field_definition', ['entry_type_id'], unique=False)
    op.create_table('block',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('entry_id', sa.Uuid(), nullable=False),
    sa.Column('parent_block_id', sa.Uuid(), nullable=True),
    sa.Column('block_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content', sa.JSON(), nullable=True),
    sa.Column('timeline_start_year', sa.Integer(), nullable=True),
    sa.Column('timeline_start_month', sa.Integer(), nullable=True),
    sa.Column('timeline_start_day', sa.Integer(), nullable=True),
    sa.Column('timeline_end_year', sa.Integer(), nullable=True),
    sa.Column('timeline_end_month', sa.Integer(), nullable=True),
    sa.Column('timeline_end_day', sa.Integer(), nullable=True),
    sa.Column('timeline_is_circa', sa.Boolean(), nullable=False),
    sa.Column('timeline_is_ongoing', sa.Boolean(), nullable=False),
    sa.Column('timeline_display_override', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('position', sa.Float(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('is_collapsed', sa.Boolean(), nullable=False),
    sa.Column('background_color', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('text_color', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Uuid(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['entry_id'], ['entry.id'], ),
    sa.ForeignKeyConstraint(['parent_block_id'], ['block.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_block_entry', 'block', ['entry_id'], unique=False)
    op.create_index('idx_block_entry_timeline', 'block', ['entry_id', 'timeline_start_year', 'timeline_end_year'], unique=False)
    op.create_index('idx_block_parent', 'block', ['parent_block_id'], unique=False)
    op.create_index('idx_block_timeline_end', 'block', ['timeline_end_year'], unique=False)
    op.create_index('idx_block_timeline_start', 'block', ['timeline_start_year'], unique=False)
    op.create_index('idx_block_type', 'block', ['block_type'], unique=False)
    op.create_index(op.f('ix_block_entry_id'), 'block', ['entry_id'], unique=False)
    op.create_index(op.f('ix_block_parent_block_id'), 'block', ['parent_block_id'], unique=False)
    op.create_table('entry_tag',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('entry_id', sa.Uuid(), nullable=False),
    sa.Column('tag_id', sa.Uuid(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['entry_id'], ['entry.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('entry_id', 'tag_id')
    )
    op.create_index('idx_entry_tag_entry', 'entry_tag', ['entry_id'], unique=False)
    op.create_index('idx_entry_tag_tag', 'entry_tag', ['tag_id'], unique=False)
    op.create_index(op.f('ix_entry_tag_entry_id'), 'entry_tag', ['entry_id'], unique=False)
    op.create_index(op.f('ix_entry_tag_tag_id'), 'entry_tag', ['tag_id'], unique=False)
    op.create_table('entry_version',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('entry_id', sa.Uuid(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('entry_type_id', sa.Uuid(), nullable=False),
    sa.Column('timeline_start_year', sa.Integer(), nullable=True),
    sa.Column('timeline_end_year', sa.Integer(), nullable=True),
    sa.Column('field_values', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('change_summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_major', sa.Boolean(), nullable=False),
    sa.Column('changes', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['entry_id'], ['entry.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_entry_version_created', 'entry_version', ['created_at'], unique=False)
    op.create_index('idx_entry_version_entry', 'entry_version', ['entry_id'], unique=False)
    op.create_index('idx_entry_version_number', 'entry_version', ['entry_id', 'version_number'], unique=False)
    op.create_index(op.f('ix_entry_version_entry_id'), 'entry_version', ['entry_id'], unique=False)
    op.create_table('field_value',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('entry_id', sa.Uuid(), nullable=False),
    sa.Column('field_definition_id', sa.Uuid(), nullable=False),
    sa.Column('value', sa.JSON(), nullable=True),
    sa.Column('timeline_start_year', sa.Integer(), nullable=True),
    sa.Column('timeline_start_month', sa.Integer(), nullable=True),
    sa.Column('timeline_start_day', sa.Integer(), nullable=True),
    sa.Column('timeline_end_year', sa.Integer(), nullable=True),
    sa.Column('timeline_end_month', sa.Integer(), nullable=True),
    sa.Column('timeline_end_day', sa.Integer(), nullable=True),
    sa.Column('timeline_is_circa', sa.Boolean(), nullable=False),
    sa.Column('timeline_is_ongoing', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Uuid(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['entry_id'], ['entry.id'], ),
    sa.ForeignKeyConstraint(['field_definition_id'], ['field_definition.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_field_value_entry', 'field_value', ['entry_id'], unique=False)
    op.create_index('idx_field_value_field', 'field_value', ['field_definition_id'], unique=False)
    op.create_index('idx_field_value_temporal', 'field_value', ['entry_id', 'field_definition_id', 'timeline_start_year', 'timeline_end_year'], unique=False)
    op.create_index('idx_field_value_timeline_end', 'field_value', ['timeline_end_year'], unique=False)
    op.create_index('idx_field_value_timeline_start', 'field_value', ['timeline_start_year'], unique=False)
    op.create_index(op.f('ix_field_value_entry_id'), 'field_value', ['entry_id'], unique=False)
    op.create_index(op.f('ix_field_value_field_definition_id'), 'field_value', ['field_definition_id'], unique=False)
    op.create_table('attachment',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('entry_id', sa.Uuid(), nullable=True),
    sa.Column('block_id', sa.Uuid(), nullable=True),
    sa.Column('world_id', sa.Uuid(), nullable=False),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('original_filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mime_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('size_bytes', sa.Integer(), nullable=False),
    sa.Column('storage_provider', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('storage_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('storage_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('thumbnail_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('uploaded_by', sa.Uuid(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['block_id'], ['block.id'], ),
    sa.ForeignKeyConstraint(['entry_id'], ['entry.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_attachment_block', 'attachment', ['block_id'], unique=False)
    op.create_index('idx_attachment_entry', 'attachment', ['entry_id'], unique=False)
    op.create_index('idx_attachment_world', 'attachment', ['world_id'], unique=False)
    op.create_index(op.f('ix_attachment_block_id'), 'attachment', ['block_id'], unique=False)
    op.create_index(op.f('ix_attachment_entry_id'), 'attachment', ['entry_id'], unique=False)
    op.create_index(op.f('ix_attachment_world_id'), 'attachment', ['world_id'], unique=False)
    op.create_table('block_version',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('block_id', sa.Uuid(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('block_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content', sa.JSON(), nullable=True),
    sa.Column('position', sa.Float(), nullable=False),
    sa.Column('timeline_start_year', sa.Integer(), nullable=True),
    sa.Column('timeline_end_year', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('change_summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['block_id'], ['block.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_block_version_block', 'block_version', ['block_id'], unique=False)
    op.create_index('idx_block_version_number', 'block_version', ['block_id', 'version_number'], unique=False)
    op.create_index(op.f('ix_block_version_block_id'), 'block_version', ['block_id'], unique=False)
    op.create_table('comment',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('entry_id', sa.Uuid(), nullable=False),
    sa.Column('block_id', sa.Uuid(), nullable=True),
    sa.Column('parent_comment_id', sa.Uuid(), nullable=True),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content_format', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_resolved', sa.Boolean(), nullable=False),
    sa.Column('resolved_by', sa.Uuid(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('reactions', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['block_id'], ['block.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['entry_id'], ['entry.id'], ),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['resolved_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_comment_block', 'comment', ['block_id'], unique=False)
    op.create_index('idx_comment_entry', 'comment', ['entry_id'], unique=False)
    op.create_index('idx_comment_parent', 'comment', ['parent_comment_id'], unique=False)
    op.create_index('idx_comment_resolved', 'comment', ['is_resolved'], unique=False)
    op.create_index(op.f('ix_comment_block_id'), 'comment', ['block_id'], unique=False)
    op.create_index(op.f('ix_comment_entry_id'), 'comment', ['entry_id'], unique=False)
    op.create_index(op.f('ix_comment_parent_comment_id'), 'comment', ['parent_comment_id'], unique=False)
    op.create_table('reference',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('reference_type_id', sa.Uuid(), nullable=False),
    sa.Column('source_entry_id', sa.Uuid(), nullable=False),
    sa.Column('target_entry_id', sa.Uuid(), nullable=False),
    sa.Column('source_block_id', sa.Uuid(), nullable=True),
    sa.Column('target_block_id', sa.Uuid(), nullable=True),
    sa.Column('timeline_start_year', sa.Integer(), nullable=True),
    sa.Column('timeline_start_month', sa.Integer(), nullable=True),
    sa.Column('timeline_start_day', sa.Integer(), nullable=True),
    sa.Column('timeline_end_year', sa.Integer(), nullable=True),
    sa.Column('timeline_end_month', sa.Integer(), nullable=True),
    sa.Column('timeline_end_day', sa.Integer(), nullable=True),
    sa.Column('timeline_is_circa', sa.Boolean(), nullable=False),
    sa.Column('timeline_is_ongoing', sa.Boolean(), nullable=False),
    sa.Column('timeline_display_override', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('context', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('position', sa.Float(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Uuid(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['reference_type_id'], ['reference_type.id'], ),
    sa.ForeignKeyConstraint(['source_block_id'], ['block.id'], ),
    sa.ForeignKeyConstraint(['source_entry_id'], ['entry.id'], ),
    sa.ForeignKeyConstraint(['target_block_id'], ['block.id'], ),
    sa.ForeignKeyConstraint(['target_entry_id'], ['entry.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_reference_source', 'reference', ['source_entry_id'], unique=False)
    op.create_index('idx_reference_source_type', 'reference', ['source_entry_id', 'reference_type_id'], unique=False)
    op.create_index('idx_reference_target', 'reference', ['target_entry_id'], unique=False)
    op.create_index('idx_reference_target_type', 'reference', ['target_entry_id', 'reference_type_id'], unique=False)
    op.create_index('idx_reference_temporal', 'reference', ['source_entry_id', 'timeline_start_year', 'timeline_end_year'], unique=False)
    op.create_index('idx_reference_timeline_end', 'reference', ['timeline_end_year'], unique=False)
    op.create_index('idx_reference_timeline_start', 'reference', ['timeline_start_year'], unique=False)
    op.create_index('idx_reference_type', 'reference', ['reference_type_id'], unique=False)
    op.create_index(op.f('ix_reference_reference_type_id'), 'reference', ['reference_type_id'], unique=False)
    op.create_index(op.f('ix_reference_source_entry_id'), 'reference', ['source_entry_id'], unique=False)
    op.create_index(op.f('ix_reference_target_entry_id'), 'reference', ['target_entry_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reference_target_entry_id'), table_name='reference')
    op.drop_index(op.f('ix_reference_source_entry_id'), table_name='reference')
    op.drop_index(op.f('ix_reference_reference_type_id'), table_name='reference')
    op.drop_index('idx_reference_type', table_name='reference')
    op.drop_index('idx_reference_timeline_start', table_name='reference')
    op.drop_index('idx_reference_timeline_end', table_name='reference')
    op.drop_index('idx_reference_temporal', table_name='reference')
    op.drop_index('idx_reference_target_type', table_name='reference')
    op.drop_index('idx_reference_target', table_name='reference')
    op.drop_index('idx_reference_source_type', table_name='reference')
    op.drop_index('idx_reference_source', table_name='reference')
    op.drop_table('reference')
    op.drop_index(op.f('ix_comment_parent_comment_id'), table_name='comment')
    op.drop_index(op.f('ix_comment_entry_id'), table_name='comment')
    op.drop_index(op.f('ix_comment_block_id'), table_name='comment')
    op.drop_index('idx_comment_resolved', table_name='comment')
    op.drop_index('idx_comment_parent', table_name='comment')
    op.drop_index('idx_comment_entry', table_name='comment')
    op.drop_index('idx_comment_block', table_name='comment')
    op.drop_table('comment')
    op.drop_index(op.f('ix_block_version_block_id'), table_name='block_version')
    op.drop_index('idx_block_version_number', table_name='block_version')
    op.drop_index('idx_block_version_block', table_name='block_version')
    op.drop_table('block_version')
    op.drop_index(op.f('ix_attachment_world_id'), table_name='attachment')
    op.drop_index(op.f('ix_attachment_entry_id'), table_name='attachment')
    op.drop_index(op.f('ix_attachment_block_id'), table_name='attachment')
    op.drop_index('idx_attachment_world', table_name='attachment')
    op.drop_index('idx_attachment_entry', table_name='attachment')
    op.drop_index('idx_attachment_block', table_name='attachment')
    op.drop_table('attachment')
    op.drop_index(op.f('ix_field_value_field_definition_id'), table_name='field_value')
    op.drop_index(op.f('ix_field_value_entry_id'), table_name='field_value')
    op.drop_index('idx_field_value_timeline_start', table_name='field_value')
    op.drop_index('idx_field_value_timeline_end', table_name='field_value')
    op.drop_index('idx_field_value_temporal', table_name='field_value')
    op.drop_index('idx_field_value_field', table_name='field_value')
    op.drop_index('idx_field_value_entry', table_name='field_value')
    op.drop_table('field_value')
    op.drop_index(op.f('ix_entry_version_entry_id'), table_name='entry_version')
    op.drop_index('idx_entry_version_number', table_name='entry_version')
    op.drop_index('idx_entry_version_entry', table_name='entry_version')
    op.drop_index('idx_entry_version_created', table_name='entry_version')
    op.drop_table('entry_version')
    op.drop_index(op.f('ix_entry_tag_tag_id'), table_name='entry_tag')
    op.drop_index(op.f('ix_entry_tag_entry_id'), table_name='entry_tag')
    op.drop_index('idx_entry_tag_tag', table_name='entry_tag')
    op.drop_index('idx_entry_tag_entry', table_name='entry_tag')
    op.drop_table('entry_tag')
    op.drop_index(op.f('ix_block_parent_block_id'), table_name='block')
    op.drop_index(op.f('ix_block_entry_id'), table_name='block')
    op.drop_index('idx_block_type', table_name='block')
    op.drop_index('idx_block_timeline_start', table_name='block')
    op.drop_index('idx_block_timeline_end', table_name='block')
    op.drop_index('idx_block_parent', table_name='block')
    op.drop_index('idx_block_entry_timeline', table_name='block')
    op.drop_index('idx_block_entry', table_name='block')
    op.drop_table('block')
    op.drop_index(op.f('ix_field_definition_entry_type_id'), table_name='field_definition')
    op.drop_index('idx_field_def_type', table_name='field_definition')
    op.drop_table('field_definition')
    op.drop_index(op.f('ix_era_world_timeline_id'), table_name='era')
    op.drop_table('era')
    op.drop_index(op.f('ix_entry_world_id'), table_name='entry')
    op.drop_index(op.f('ix_entry_path'), table_name='entry')
    op.drop_index(op.f('ix_entry_entry_type_id'), table_name='entry')
    op.drop_index('idx_entry_world', table_name='entry')
    op.drop_index('idx_entry_type', table_name='entry')
    op.drop_index('idx_entry_timeline_start', table_name='entry')
    op.drop_index('idx_entry_timeline_end', table_name='entry')
    op.drop_index('idx_entry_path', table_name='entry')
    op.drop_table('entry')
    op.drop_index(op.f('ix_world_user_world_id'), table_name='world_user')
    op.drop_index(op.f('ix_world_user_user_id'), table_name='world_user')
    op.drop_index('idx_world_user_world', table_name='world_user')
    op.drop_index('idx_world_user_user', table_name='world_user')
    op.drop_table('world_user')
    op.drop_index(op.f('ix_world_timeline_world_id'), table_name='world_timeline')
    op.drop_table('world_timeline')
    op.drop_index(op.f('ix_team_member_user_id'), table_name='team_member')
    op.drop_index(op.f('ix_team_member_team_id'), table_name='team_member')
    op.drop_index('idx_team_member_user', table_name='team_member')
    op.drop_index('idx_team_member_team', table_name='team_member')
    op.drop_table('team_member')
    op.drop_index(op.f('ix_tag_world_id'), table_name='tag')
    op.drop_index('idx_tag_world', table_name='tag')
    op.drop_table('tag')
    op.drop_index(op.f('ix_saved_view_world_id'), table_name='saved_view')
    op.drop_index('idx_saved_view_world', table_name='saved_view')
    op.drop_index('idx_saved_view_creator', table_name='saved_view')
    op.drop_table('saved_view')
    op.drop_index(op.f('ix_reference_type_world_id'), table_name='reference_type')
    op.drop_index('idx_reference_type_world', table_name='reference_type')
    op.drop_table('reference_type')
    op.drop_index(op.f('ix_permission_world_id'), table_name='permission')
    op.drop_index(op.f('ix_permission_weave_id'), table_name='permission')
    op.drop_index('idx_permission_world', table_name='permission')
    op.drop_index('idx_permission_weave', table_name='permission')
    op.drop_index('idx_permission_subject', table_name='permission')
    op.drop_index('idx_permission_resource', table_name='permission')
    op.drop_index('idx_permission_lookup', table_name='permission')
    op.drop_index('idx_permission_action', table_name='permission')
    op.drop_table('permission')
    op.drop_index(op.f('ix_entry_type_world_id'), table_name='entry_type')
    op.drop_index('idx_entry_type_world', table_name='entry_type')
    op.drop_table('entry_type')
    op.drop_index(op.f('ix_activity_log_world_id'), table_name='activity_log')
    op.drop_index(op.f('ix_activity_log_weave_id'), table_name='activity_log')
    op.drop_index(op.f('ix_activity_log_user_id'), table_name='activity_log')
    op.drop_index('idx_activity_world', table_name='activity_log')
    op.drop_index('idx_activity_weave', table_name='activity_log')
    op.drop_index('idx_activity_user', table_name='activity_log')
    op.drop_index('idx_activity_resource', table_name='activity_log')
    op.drop_index('idx_activity_created', table_name='activity_log')
    op.drop_table('activity_log')
    op.drop_index(op.f('ix_world_weave_id'), table_name='world')
    op.drop_index('idx_world_weave', table_name='world')
    op.drop_index('idx_world_public', table_name='world')
    op.drop_table('world')
    op.drop_index(op.f('ix_weave_user_weave_id'), table_name='weave_user')
    op.drop_index(op.f('ix_weave_user_user_id'), table_name='weave_user')
    op.drop_index('idx_weave_user_weave', table_name='weave_user')
    op.drop_index('idx_weave_user_user', table_name='weave_user')
    op.drop_table('weave_user')
    op.drop_index(op.f('ix_team_weave_id'), table_name='team')
    op.drop_index('idx_team_weave', table_name='team')
    op.drop_table('team')
    op.drop_index(op.f('ix_weave_slug'), table_name='weave')
    op.drop_table('weave')
    # ### end Alembic commands ###
