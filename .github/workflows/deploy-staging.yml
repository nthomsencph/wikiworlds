name: Deploy to Staging

on:
  push:
    branches:
      - master

jobs:
  check-secrets:
    runs-on: ubuntu-latest
    outputs:
      secrets-exist: ${{ steps.check.outputs.secrets-exist }}
    steps:
      - name: Check if deployment secrets exist
        id: check
        env:
          DOMAIN_STAGING: ${{ secrets.DOMAIN_STAGING }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: |
          if [[ -n "$DOMAIN_STAGING" && -n "$SECRET_KEY" && -n "$POSTGRES_PASSWORD" ]]; then
            echo "secrets-exist=true" >> $GITHUB_OUTPUT
            echo "✅ Essential deployment secrets are configured"
          else
            echo "secrets-exist=false" >> $GITHUB_OUTPUT
            echo "❌ Missing essential deployment secrets (DOMAIN_STAGING, SECRET_KEY, POSTGRES_PASSWORD)"
            echo "Skipping deployment - configure secrets to enable deployment"
          fi

  deploy:
    needs: check-secrets
    # Do not deploy in the main repository, only in user projects, and only if secrets exist
    if: github.repository_owner != 'fastapi' && needs.check-secrets.outputs.secrets-exist == 'true'
    runs-on:
      - self-hosted
      - staging
    env:
      ENVIRONMENT: staging
      DOMAIN: ${{ secrets.DOMAIN_STAGING }}
      STACK_NAME: ${{ secrets.STACK_NAME_STAGING }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      FIRST_SUPERUSER: ${{ secrets.FIRST_SUPERUSER }}
      FIRST_SUPERUSER_PASSWORD: ${{ secrets.FIRST_SUPERUSER_PASSWORD }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      EMAILS_FROM_EMAIL: ${{ secrets.EMAILS_FROM_EMAIL }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - run: docker compose -f docker-compose.yml --project-name ${{ secrets.STACK_NAME_STAGING }} build
      - run: docker compose -f docker-compose.yml --project-name ${{ secrets.STACK_NAME_STAGING }} up -d
